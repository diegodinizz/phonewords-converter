{"ast":null,"code":"var _jsxFileName = \"/Users/diegodinizz/Diego/projects/react/phonewords-converter/client/src/container/WordList.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { WordListItem } from '../components/WordListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 2rem 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c = Container;\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c2 = ListContainer;\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  /* color: #41444b; */\n  text-align: center;\n`;\n_c3 = Title;\nexport const WordList = ({\n  number\n}) => {\n  _s();\n\n  const wordList = useSelector(state => state.wordsData);\n  const fetching = useSelector(state => state.isFetching);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wordList.length ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"List of Words for the number: \", number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n        children: wordList.map((item, index) => /*#__PURE__*/_jsxDEV(WordListItem, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordList, \"K1eOOpbM43FC2jgIupm3OLPsMf8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c4 = WordList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ListContainer\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"WordList\");","map":{"version":3,"sources":["/Users/diegodinizz/Diego/projects/react/phonewords-converter/client/src/container/WordList.js"],"names":["styled","useSelector","WordListItem","Container","div","ListContainer","Title","h1","WordList","number","wordList","state","wordsData","fetching","isFetching","length","map","item","index"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,aAAa,GAAGL,MAAM,CAACI,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMC,a;AAON,MAAMC,KAAK,GAAGN,MAAM,CAACO,EAAG;AACxB;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,OAAO,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACtC,QAAMC,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,UAAhB,CAA5B;AAEA,sBACE;AAAA,cACGJ,QAAQ,CAACK,MAAT,gBACC,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAA,qDAAsCN,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,kBACGC,QAAQ,CAACM,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,YAAD;AAA0B,UAAA,IAAI,EAAED;AAAhC,WAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GASG;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlBM;;GAAMV,Q;UACMP,W,EACAA,W;;;MAFNO,Q","sourcesContent":["import styled from 'styled-components'\nimport { useSelector } from 'react-redux'\n\nimport { WordListItem } from '../components/WordListItem'\n\nconst Container = styled.div`\n  width: 80%;\n  margin: 2rem 0;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  /* color: #41444b; */\n  text-align: center;\n`\n\nexport const WordList = ({ number }) => {\n  const wordList = useSelector(state => state.wordsData)\n  const fetching = useSelector(state => state.isFetching)\n  \n  return (\n    <div>\n      {wordList.length ? (\n        <Container>\n          <Title>List of Words for the number: {number}</Title>\n          <ListContainer>\n            {wordList.map((item, index) => (\n              <WordListItem key={index} item={item} />\n            ))}\n          </ListContainer>\n        </Container>\n      ) : null}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}