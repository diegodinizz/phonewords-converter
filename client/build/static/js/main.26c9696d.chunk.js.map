{"version":3,"sources":["reportWebVitals.js","components/InputField.js","components/PhoneKeyboard.js","components/CustomButton.js","components/WordListItem.js","container/WordList.js","redux/types.js","pages/Home.js","redux/actions.js","GlobalStyle.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","styled","div","Label","p","Input","input","InputField","value","placeholder","onChange","maxLength","onKeyPress","event","RegExp","test","key","preventDefault","ShowHideContainer","Title","turnArrow","css","Arrow","i","showKeyPad","KeyPadContainer","KeyNumber","PhoneKeyboard","onClick","useState","active","setActive","className","buttonDisabled","button","backgroundColor","props","disabled","CustomButton","children","color","WordListItem","item","ListContainer","h1","WordList","number","wordList","useSelector","state","wordsData","length","map","index","PhoneWordsActionTypes","Subtitle","h3","ButtonsContainer","Home","setNumber","inputTerm","setInputTerm","dispatch","useDispatch","target","join","innerText","a","type","fetch","response","json","data","success","error","phonewords","payload","fetchPhoneWordsAsync","GlobalStyle","createGlobalStyle","App","INITIAL_STATE","isFetching","errorMessage","undefined","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26c9696d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 25rem;\n\n  @media screen and (max-width: 600px) {\n    width: 20rem;\n  }\n`\n\nconst Label = styled.p`\n  margin: 3px 0;\n  font-weight: 300;\n  font-size: 1rem;\n  color: gray;\n\n  @media screen and (max-width: 600px) {\n    font-size: 0.8rem;\n  }\n`\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  padding: 10px;\n  width: 100%;\n  height: 50px;\n  font-size: 17px;\n  color: #545454;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  ::placeholder {\n    color: gainsboro;\n  }\n\n  @media screen and (max-width: 600px) {\n    height: 40px;\n  }\n`\n\nexport const InputField = ({ value, placeholder, onChange }) => {\n  const handleKeyPress = event => {\n    const charAllowed = new RegExp('^[2-9]+$')\n    if (!charAllowed.test(event.key)) {\n      event.preventDefault()\n    }\n  }\n\n  return (\n    <Container>\n      <Label>Phone Number (Max 6 digits)</Label>\n      <Input\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        maxLength='6'\n        onKeyPress={handleKeyPress}\n      />\n    </Container>\n  )\n}\n","import { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 25rem;\n  height: auto;\n  margin-top: 1rem;\n  background-color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  @media screen and (max-width: 600px) {\n    width: 20rem;\n  }\n`\n\nconst ShowHideContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  cursor: pointer;\n  border-top: 1px solid rgba(212, 212, 217, 0.5);\n`\n\nconst Title = styled.p`\n  font-weight: 500;\n  font-size: 1rem;\n  margin: 0;\n`\nconst turnArrow = css`\n  transform: rotate(-135deg);\n  -webkit-transform: rotate(-135deg);\n  transition: transform 300ms ease-out;\n`\n\nconst Arrow = styled.i`\n  margin-right: 0.5rem;\n  border: solid #41444b;\n  border-width: 0 3px 3px 0;\n  display: inline-block;\n  padding: 4px;\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n  transition: transform 300ms ease-out;\n\n  &.turn {\n    ${turnArrow}\n  }\n`\n\nconst showKeyPad = css`\n  display: grid;\n`\n\nconst KeyPadContainer = styled.div`\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  padding: 15px 30px;\n  display: none;\n  gap: 10px;\n\n  .row-4 {\n    grid-column-start: 2;\n  }\n\n  &.active {\n    ${showKeyPad}\n  }\n`\n\nconst KeyNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: auto;\n  height: 60px;\n  cursor: pointer;\n  font-size: 1.5rem;\n  background-color: #e8e8e8;\n\n  :hover {\n    background-color: #f4f4f2;\n  }\n`\n\nexport const PhoneKeyboard = ({ onClick }) => {\n  const [active, setActive] = useState(false)\n\n  return (\n    <Container>\n      <ShowHideContainer onClick={() => setActive(!active)}>\n        <Title>Show/Hide Phone Keyboard</Title>\n        <Arrow className={active ? 'turn' : ''}></Arrow>\n      </ShowHideContainer>\n      <KeyPadContainer className={active ? 'active' : ''}>\n        <KeyNumber>1</KeyNumber>\n        <KeyNumber onClick={onClick}>2</KeyNumber>\n        <KeyNumber onClick={onClick}>3</KeyNumber>\n        <KeyNumber onClick={onClick}>4</KeyNumber>\n        <KeyNumber onClick={onClick}>5</KeyNumber>\n        <KeyNumber onClick={onClick}>6</KeyNumber>\n        <KeyNumber onClick={onClick}>7</KeyNumber>\n        <KeyNumber onClick={onClick}>8</KeyNumber>\n        <KeyNumber onClick={onClick}>9</KeyNumber>\n        <KeyNumber className='row-4'>0</KeyNumber>\n      </KeyPadContainer>\n    </Container>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nconst buttonDisabled = css`\n  opacity: 0.7;\n  cursor: not-allowed;\n`\n\nconst getButtonStyles = props => {\n  if (props.disabled) return buttonDisabled\n}\n\nconst Container = styled.button`\n  min-width: 85px;\n  width: auto;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: #fff;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  height: 50px;\n  padding: 0 1rem;\n  text-align: center;\n  border: none;\n  outline: none;\n  margin: 1rem;\n\n  ${getButtonStyles}\n\n  @media screen and (max-width: 600px) {\n    height: 45px;\n  }\n`\n\nexport const CustomButton = ({ children, onClick, disabled, color }) => (\n  <Container onClick={onClick} disabled={disabled} backgroundColor={color}>\n    {children}\n  </Container>\n)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  width: auto;\n  min-width: 3rem;\n  background-color: #0a84ff;\n  border-radius: 5px;\n  color: #eaf3f5;\n  font-size: 18px;\n  font-weight: 600;\n  height: 50px;\n  padding: 0 0.8rem;\n  margin: 0.7rem;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const WordListItem = ({ item }) => <Container>{item}</Container>\n","import styled from 'styled-components'\nimport { useSelector } from 'react-redux'\n\nimport { WordListItem } from '../components/WordListItem'\n\nconst Container = styled.div`\n  width: 80%;\n  margin: 2rem 0;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nconst Title = styled.h1`\n  font-size: 1.5rem;\n  text-align: center;\n`\n\nexport const WordList = ({ number }) => {\n  const wordList = useSelector(state => state.wordsData)\n\n  return (\n    <div>\n      {wordList.length ? (\n        <Container>\n          <Title>List of Words for the number: {number}</Title>\n          <ListContainer>\n            {wordList.map((item, index) => (\n              <WordListItem key={index} item={item} />\n            ))}\n          </ListContainer>\n        </Container>\n      ) : null}\n    </div>\n  )\n}\n","export const PhoneWordsActionTypes = {\n  FETCH_PHONEWORDS_START: 'FETCH_PHONEWORDS_START',\n  FETCH_PHONEWORDS_SUCCESS: 'FETCH_PHONEWORDS_SUCCESS',\n  FETCH_PHONEWORDS_FAILURE: 'FETCH_PHONEWORDS_FAILURE',\n  CLEAR_PHONEWORDS: 'CLEAR_PHONEWORDS'\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { InputField } from '../components/InputField'\nimport { PhoneKeyboard } from '../components/PhoneKeyboard'\nimport { CustomButton } from '../components/CustomButton'\nimport { WordList } from '../container/WordList'\n\nimport { clearPhoneWords, fetchPhoneWordsAsync } from '../redux/actions'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #41444b;\n`\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin: 3rem 0 0 0;\n\n  @media screen and (max-width: 600px) {\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 375px) {\n    font-size: 1.8rem;\n  }\n`\n\nconst Subtitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 300;\n  margin: 0 0 4rem 0;\n\n  @media screen and (max-width: 600px) {\n    font-size: 0.7rem;\n  }\n\n  @media screen and (max-width: 375px) {\n    font-size: 0.6rem;\n  }\n`\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const Home = () => {\n  const [number, setNumber] = useState('')\n  const [inputTerm, setInputTerm] = useState('')\n  const dispatch = useDispatch()\n\n  function handleSubmit () {\n    dispatch(fetchPhoneWordsAsync(inputTerm))\n    setNumber(inputTerm)\n    setInputTerm('')\n  }\n\n  function handleClick (event) {\n    if (inputTerm.length <= 5) {\n      setInputTerm([...inputTerm, event.target.innerText].join(''))\n    }\n  }\n\n  function handleClear () {\n    setInputTerm('')\n    setNumber('')\n    dispatch(clearPhoneWords())\n  }\n\n  return (\n    <Container>\n      <Title>Phonewords Converter</Title>\n      <Subtitle>\n        Submit a phone number to display a list of its possible phone words\n      </Subtitle>\n      <InputField\n        value={inputTerm}\n        placeholder='Digits valid from 2 to 9'\n        onChange={event => setInputTerm([event.target.value].join(''))}\n      />\n      <PhoneKeyboard onClick={handleClick} />\n      <ButtonsContainer>\n        <CustomButton\n          onClick={handleSubmit}\n          disabled={inputTerm === ''}\n          color='#30d158'\n        >\n          Submit\n        </CustomButton>\n        <CustomButton onClick={handleClear} color='#8E8E93'>\n          Clear\n        </CustomButton>\n      </ButtonsContainer>\n      <WordList number={number} />\n    </Container>\n  )\n}\n","import { PhoneWordsActionTypes } from './types'\n\nexport const fetchPhoneWordsStart = () => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_START\n})\n\nexport const fetchPhoneWordsSuccess = words => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_SUCCESS,\n  payload: words\n})\n\nexport const fetchPhoneWordsFailure = errorMessage => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_FAILURE,\n  payload: errorMessage\n})\n\nexport const clearPhoneWords = () => ({\n  type: PhoneWordsActionTypes.CLEAR_PHONEWORDS\n})\n\nexport const fetchPhoneWordsAsync = number => {\n  return async dispatch => {\n    dispatch(fetchPhoneWordsStart())\n\n    const response = await fetch(`/phonewords/api/${number}`)\n    const data = await response.json()\n\n    const { success, error, phonewords } = data\n\n    if (!success) {\n      dispatch(fetchPhoneWordsFailure(error))\n    }\n\n    dispatch(fetchPhoneWordsSuccess(phonewords))\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  background-color: #eaf3f5;\n  -webkit-font-smoothing: antialiased;\n  font-family: 'Rubik', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n`\n","import { Home } from './pages/Home'\nimport { GlobalStyle } from './GlobalStyle'\n\nfunction App () {\n  return (\n    <div>\n      <Home />\n      <GlobalStyle />\n    </div>\n  )\n}\n\nexport default App\n","import { PhoneWordsActionTypes } from './types'\n\nconst INITIAL_STATE = {\n  wordsData: [],\n  isFetching: true,\n  errorMessage: undefined\n}\n\nexport const phoneWordsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case PhoneWordsActionTypes.FETCH_PHONEWORDS_START:\n      return {\n        ...state,\n        isFetching: true\n      }\n    case PhoneWordsActionTypes.FETCH_PHONEWORDS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        wordsData: action.payload\n      }\n    case PhoneWordsActionTypes.FETCH_PHONEWORDS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      }\n    case PhoneWordsActionTypes.CLEAR_PHONEWORDS:\n      return {\n        ...state,\n        wordsData: []\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { phoneWordsReducer } from './reducer'\n\nconst store = createStore(phoneWordsReducer, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}