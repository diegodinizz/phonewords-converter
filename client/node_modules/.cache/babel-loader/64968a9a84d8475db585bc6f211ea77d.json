{"ast":null,"code":"import _regeneratorRuntime from\"/Users/diegodinizz/Diego/projects/react/phonewords-converter/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/diegodinizz/Diego/projects/react/phonewords-converter/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{PhoneWordsActionTypes}from'./types';export var fetchPhoneWordsStart=function fetchPhoneWordsStart(){return{type:PhoneWordsActionTypes.FETCH_PHONEWORDS_START};};export var fetchPhoneWordsSuccess=function fetchPhoneWordsSuccess(words){return{type:PhoneWordsActionTypes.FETCH_PHONEWORDS_SUCCESS,payload:words};};export var fetchPhoneWordsFailure=function fetchPhoneWordsFailure(errorMessage){return{type:PhoneWordsActionTypes.FETCH_PHONEWORDS_FAILURE,payload:errorMessage};};export var clearPhoneWords=function clearPhoneWords(){return{type:PhoneWordsActionTypes.CLEAR_PHONEWORDS};};export var fetchPhoneWordsAsync=function fetchPhoneWordsAsync(number){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,data,success,error,phonewords;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchPhoneWordsStart());_context.next=3;return fetch(\"/phonewords/api/\".concat(number));case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;success=data.success,error=data.error,phonewords=data.phonewords;if(!success){dispatch(fetchPhoneWordsFailure(error));}dispatch(fetchPhoneWordsSuccess(phonewords));case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/diegodinizz/Diego/projects/react/phonewords-converter/client/src/redux/actions.js"],"names":["PhoneWordsActionTypes","fetchPhoneWordsStart","type","FETCH_PHONEWORDS_START","fetchPhoneWordsSuccess","words","FETCH_PHONEWORDS_SUCCESS","payload","fetchPhoneWordsFailure","errorMessage","FETCH_PHONEWORDS_FAILURE","clearPhoneWords","CLEAR_PHONEWORDS","fetchPhoneWordsAsync","number","dispatch","fetch","response","json","data","success","error","phonewords"],"mappings":"ySAAA,OAASA,qBAAT,KAAsC,SAAtC,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,SAAO,CACzCC,IAAI,CAAEF,qBAAqB,CAACG,sBADa,CAAP,EAA7B,CAIP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,KAAK,QAAK,CAC9CH,IAAI,CAAEF,qBAAqB,CAACM,wBADkB,CAE9CC,OAAO,CAAEF,KAFqC,CAAL,EAApC,CAKP,MAAO,IAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,YAAY,QAAK,CACrDP,IAAI,CAAEF,qBAAqB,CAACU,wBADyB,CAErDH,OAAO,CAAEE,YAF4C,CAAL,EAA3C,CAKP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAO,CACpCT,IAAI,CAAEF,qBAAqB,CAACY,gBADQ,CAAP,EAAxB,CAIP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAC,MAAM,CAAI,CAC5C,+FAAO,iBAAMC,QAAN,6JACLA,QAAQ,CAACd,oBAAoB,EAArB,CAAR,CADK,sBAGkBe,CAAAA,KAAK,2BAAoBF,MAApB,EAHvB,QAGCG,QAHD,qCAIcA,CAAAA,QAAQ,CAACC,IAAT,EAJd,QAICC,IAJD,eAMGC,OANH,CAMkCD,IANlC,CAMGC,OANH,CAMYC,KANZ,CAMkCF,IANlC,CAMYE,KANZ,CAMmBC,UANnB,CAMkCH,IANlC,CAMmBG,UANnB,CAQL,GAAI,CAACF,OAAL,CAAc,CACZL,QAAQ,CAACP,sBAAsB,CAACa,KAAD,CAAvB,CAAR,CACD,CAEDN,QAAQ,CAACX,sBAAsB,CAACkB,UAAD,CAAvB,CAAR,CAZK,uDAAP,+DAcD,CAfM","sourcesContent":["import { PhoneWordsActionTypes } from './types'\n\nexport const fetchPhoneWordsStart = () => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_START\n})\n\nexport const fetchPhoneWordsSuccess = words => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_SUCCESS,\n  payload: words\n})\n\nexport const fetchPhoneWordsFailure = errorMessage => ({\n  type: PhoneWordsActionTypes.FETCH_PHONEWORDS_FAILURE,\n  payload: errorMessage\n})\n\nexport const clearPhoneWords = () => ({\n  type: PhoneWordsActionTypes.CLEAR_PHONEWORDS\n})\n\nexport const fetchPhoneWordsAsync = number => {\n  return async dispatch => {\n    dispatch(fetchPhoneWordsStart())\n\n    const response = await fetch(`/phonewords/api/${number}`)\n    const data = await response.json()\n\n    const { success, error, phonewords } = data\n\n    if (!success) {\n      dispatch(fetchPhoneWordsFailure(error))\n    }\n\n    dispatch(fetchPhoneWordsSuccess(phonewords))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}